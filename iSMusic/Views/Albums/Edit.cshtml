@model iSMusic.Models.ViewModels.AlbumEditVM

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Albums", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>*必填</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.albumName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.albumName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.albumName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CoverFile, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="CoverFile" id="myImg" accept="image/gif, image/jpeg, image/png" />
                    @Html.ValidationMessageFor(model => model.CoverFile, "", new { @class = "text-danger" })
                </div>
                <img id="preview" style="max-height:200px;" />
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.released, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.released, "DateTimePicker")
                    @Html.ValidationMessageFor(model => model.released, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.mainArtistId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.mainArtistId, (IEnumerable<SelectListItem>)ViewBag.ArtistList, new { @class = "form-control col-md-7" })
                    @Html.ValidationMessageFor(model => model.mainArtistId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.songIdList, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.songIdList, (IEnumerable<SelectListItem>)ViewBag.SongList, new { @class = "form-control col-md-7 songIdList main" })
                    @Html.ValidationMessageFor(model => model.songIdList, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group" id="songList">
                <button id="addSong" class="btn btn-default col-md-offset-3 col-md-4" type="button">新增歌曲</button>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.description, new { @class = "form-control", @rows = "20" })
                    @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index") |
    @Html.ActionLink("Delete", "Delete", new { id = Model.id })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        const myImg = document.querySelector("#myImg");
        myImg.addEventListener("change", function (e) {
            const file = this.files[0];
            const objectURL = URL.createObjectURL(file);
            let preview = document.querySelector("#preview");
            preview.src = objectURL;
        })

        $(document).ready(function () {
            let id = $("#mainArtistId").val();
            var songList = {};
            $.ajax({
                type: "GET",
                url: "https://localhost:44342/Songs/GetSongList?" + "artistId=" + id
            }).done(function (data) {
                songList = data;
                let length = @Model.songIdList.Count;
                for (let i = 1; i < length; i++) {
                    let div = $("<div>");
                    div.attr("class", "col-md-10 col-md-offset-2");
                    let droplist = $(".main").clone();
                    $(droplist).removeClass("main");
                    let delBtn = $("<button>");
                    delBtn.attr("class", "btn btn-control col-md-2")
                    delBtn.text("Delete")
                    delBtn.on("click", function () {
                        div.remove();
                    })
                    div.append(droplist);
                    div.append(delBtn);

                    $("#addSong").before(div);
                }
                $(".songIdList").html($('<option>', {
                    value: "",
                    text: "請選擇"
                }));
                $.each(songList, function (i, item) {
                    $('.songIdList').append($('<option>', {
                        value: item.songId,
                        text: item.songName
                    }));
                });
                let chooseList = $(".songIdList");
                let i = 0;
                @foreach(var songId in Model.songIdList)
                {
                    @:$(chooseList[i]).val(@songId);
                    @:i++;
                }
            }).fail(function (err) {
                alert(err)
            })

            $("#preview").attr("src", "@Model.albumCoverPath");

            $("#mainArtistId").on("change", function () {
                let id = $(this).val();
                $.ajax({
                    type: "GET",
                    url: "https://localhost:44342/Songs/GetSongList?" + "artistId=" + id
                }).done(function (data) {
                    songList = data;
                    $(".songIdList").html($('<option>', {
                        value: "",
                        text: "請選擇"
                        }));
                    $.each(songList, function (i, item) {
                        $('.songIdList').append($('<option>', {
                            value: item.songId,
                            text: item.songName
                        }));
                    });
                }).fail(function (err) {
                    alert(err)
                })
            })

            $(".songIdList").on("change", function () {
                //todo
            })

            $("#addSong").on("click", function () {
                let div = $("<div>");
                div.attr("class", "col-md-10 col-md-offset-2");
                let droplist = $(".main").clone();
                $(droplist).removeClass("main");
                let delBtn = $("<button>");
                delBtn.attr("class", "btn btn-control col-md-2")
                delBtn.text("Delete")
                delBtn.on("click", function () {
                    div.remove();
                })
                div.append(droplist);
                div.append(delBtn);

                $("#addSong").before(div);
            })
        })
    </script>
}

